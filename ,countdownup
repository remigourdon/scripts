#!/usr/bin/env bash
# Reads start and stop from file or CLI and counts down then up
set -Eeuo pipefail

if [[ -f "${1}" ]] ; then
    FROM_FILE=true
    { read -r START; read -r STOP; read -r META; } < "${1}"
else
    FROM_FILE=false
    START="${1}"
    STOP="${2}"
    META="${3:-}"
fi

displayTime() {
  local T="${1}"
  local D="$((T/60/60/24))"
  local H="$((T/60/60%24))"
  local M="$((T/60%60))"
  local S="$((T%60))"
  (( D > 0 )) && printf '%2dd ' "${D}"
  (( H > 0 )) && printf '%2dh ' "${H}"
  (( M > 0 )) && printf '%2dm ' "${M}"
  (( D > 0 || "${H}" > 0 || "${M}" > 0 ))
  printf '%2ds\n' "${S}"
}

DIFF_START="$(( START - $(date +%s) ))"
DIFF_STOP="$(( STOP - $(date +%s) ))"

NOTIFY_CMD=("notify-send" "--urgency=critical" "--expire-time=30000")

if [[ "${DIFF_START}" -ge 0 ]] ; then
    echo "-$(displayTime "${DIFF_START}") ${META}"
elif [[ "${DIFF_STOP}" -ge 1 ]] ; then
    if [[ "${DIFF_START}" -ge -1 ]] ; then
        "${NOTIFY_CMD[@]}" "${META} has started!"
    fi
    echo "$(displayTime "${DIFF_STOP}") ${META}"
else
    if [[ "${FROM_FILE}" = true ]] ; then
        rm "${1}"
    fi
    "${NOTIFY_CMD[@]}" "${META} is done!"
fi
